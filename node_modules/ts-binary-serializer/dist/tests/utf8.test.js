"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var SerializeField_1 = require("../src/SerializeField");
var DataType_1 = require("../src/DataType");
var BinarySerializer_1 = require("../src/BinarySerializer");
var helper_test_1 = require("./helper.test");
var UTF8STR = /** @class */ (function () {
    function UTF8STR() {
    }
    __decorate([
        SerializeField_1.SerializeField(DataType_1.DataType.String)
    ], UTF8STR.prototype, "str", void 0);
    return UTF8STR;
}());
describe("utf8", function () {
    it("case", function () {
        var str = "F\uDB21\uDCE2\u31A2x\uDB25\uDF12\uDB9F\uDFDA \uF18DZE{T\u0772\uA940\u0E3D\u349A\uC405\u0718\uD8BC\uDC2F\u011A\uF280p \u0405n\u7EFA\uD97A\uDC4B.\u53EE\uFFFD\u0140\uCD85\u0687\uA012\u036B\uD235\uD88D\uDF9F\u0598\u07C7\u8C7F\uDA75\uDE92<\u1CB1\u0FEC\uD8B2\uDC5F\uF6C18\u0673y\uDBFD\uDD59\u0123\u02BF\u0091\u0532\u01E1\uDACC\uDF52\u1561i\u0416\uDA83\uDF86\uDACE\uDC6Bn\uDBEB\uDD47\u0107\u69321\u9F30\u7CF7\uA712\uD996\uDDA6\u00B9I\uD8F3\uDE3FF\u0654\u035C\uCC09\u0115\uDA1D\uDD38\u80B2\u044D\u03CF\u0753\uDA06\uDF9A\uAC19\u06CF\uD91E\uDE2F\u71E6\u0265\u89AE\u02F2Z\u24C0\uDBD1\uDFBF\u0737MT\u00CEq\u0318";
        var test = new UTF8STR();
        test.str = str;
        var df = BinarySerializer_1.BinarySerializer.Serialize(test, UTF8STR, { fastUTF8string: true });
        var d = BinarySerializer_1.BinarySerializer.Serialize(test, UTF8STR, { fastUTF8string: false });
        var sf = BinarySerializer_1.BinarySerializer.Deserialize(df, UTF8STR, { fastUTF8string: true });
        var s = BinarySerializer_1.BinarySerializer.Deserialize(d, UTF8STR, { fastUTF8string: false });
        helper_test_1.verfiy(test, sf);
        helper_test_1.verfiy(test, s);
    });
});
