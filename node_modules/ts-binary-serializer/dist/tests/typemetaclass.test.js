"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var DataType_1 = require("../src/DataType");
var SerializeField_1 = require("../src/SerializeField");
var ClassB = /** @class */ (function () {
    function ClassB() {
    }
    __decorate([
        SerializeField_1.SerializeField(DataType_1.DataType.String)
    ], ClassB.prototype, "str", void 0);
    return ClassB;
}());
var ClassD = /** @class */ (function () {
    function ClassD() {
    }
    __decorate([
        SerializeField_1.SerializeField(DataType_1.DataType.String)
    ], ClassD.prototype, "str", void 0);
    return ClassD;
}());
var ClassC = /** @class */ (function () {
    function ClassC() {
    }
    __decorate([
        SerializeField_1.SerializeField(DataType_1.DataType.Float32)
    ], ClassC.prototype, "num", void 0);
    __decorate([
        SerializeField_1.SerializeField(DataType_1.DataType.Object, false, ClassD)
    ], ClassC.prototype, "d", void 0);
    return ClassC;
}());
var ClassA = /** @class */ (function () {
    function ClassA() {
    }
    __decorate([
        SerializeField_1.SerializeField(DataType_1.DataType.Object, false, ClassB)
    ], ClassA.prototype, "b", void 0);
    __decorate([
        SerializeField_1.SerializeField(DataType_1.DataType.String)
    ], ClassA.prototype, "str", void 0);
    __decorate([
        SerializeField_1.SerializeField(DataType_1.DataType.Object, false, ClassC)
    ], ClassA.prototype, "c", void 0);
    __decorate([
        SerializeField_1.SerializeField(DataType_1.DataType.Float32)
    ], ClassA.prototype, "num", void 0);
    return ClassA;
}());
