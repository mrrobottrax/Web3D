"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var VariantEncoding_1 = require("../src/VariantEncoding");
var helper_test_1 = require("./helper.test");
var SerializeField_1 = require("../src/SerializeField");
var DataType_1 = require("../src/DataType");
var BinarySerializer_1 = require("../src/BinarySerializer");
describe("variant", function () {
    it("unsigned32", function () {
        var verifyVariant32 = function (n) {
            var d = VariantEncoding_1.EncodeVariant32Unsigned(n);
            var m = VariantEncoding_1.DecodeVariant32Unsigned(d);
            helper_test_1.verfiy(n, m);
        };
        verifyVariant32(0);
        verifyVariant32(1);
        verifyVariant32(10);
        verifyVariant32(100);
        verifyVariant32(1000);
        verifyVariant32(10000);
        verifyVariant32(100000);
        verifyVariant32(1000000);
        verifyVariant32(10000000);
        verifyVariant32(100000000);
        verifyVariant32(1000000000);
        verifyVariant32(1 << 30);
    });
    it("signed32", function () {
        var verifyVariant32 = function (n) {
            var d = VariantEncoding_1.EncodeVariant32Signed(n);
            var m = VariantEncoding_1.DecodeVariant32Signed(d);
            helper_test_1.verfiy(n, m);
        };
        verifyVariant32(0);
        verifyVariant32(1);
        verifyVariant32(10);
        verifyVariant32(100);
        verifyVariant32(1000);
        verifyVariant32(10000);
        verifyVariant32(100000);
        verifyVariant32(1000000);
        verifyVariant32(10000000);
        verifyVariant32(100000000);
        verifyVariant32(1000000000);
        verifyVariant32(1 << 29);
        verifyVariant32(-1);
        verifyVariant32(-10);
        verifyVariant32(-100);
        verifyVariant32(-1000);
        verifyVariant32(-10000);
        verifyVariant32(-100000);
        verifyVariant32(-1000000);
        verifyVariant32(-10000000);
        verifyVariant32(-100000000);
        verifyVariant32(-1000000000);
        verifyVariant32(-(1 << 30));
    });
    it("case", function () {
        var cv = new ClassVariant();
        cv.uvint = 43132334;
        cv.vint = -1233344;
        cv.uvintary = [0, 121, 43355544, VariantEncoding_1.Variant.MAX_UINT];
        cv.vintary = [0, -1, -5423243, 542223, VariantEncoding_1.Variant.MAX_INT, VariantEncoding_1.Variant.MIN_INT];
        var sd = BinarySerializer_1.BinarySerializer.Serialize(cv);
        var cv1 = BinarySerializer_1.BinarySerializer.Deserialize(sd, ClassVariant);
        helper_test_1.verfiy(cv, cv1);
    });
    it("performance", function () {
        var ary = [];
        for (var i = 0; i < 5000; i++) {
            ary.push(Math.round((Math.random() - 0.5) * VariantEncoding_1.Variant.MAX_INT));
        }
        var nonvar = new ClassVariantBenchmarkInt();
        nonvar.vint = ary;
        var variant = new ClassVariantBenchmarkVariant();
        variant.vint = ary;
        var _a = helper_test_1.estimateTime(function () { return BinarySerializer_1.BinarySerializer.Serialize(nonvar); }, 10), sd_non_t = _a[0], sd_non = _a[1];
        var _b = helper_test_1.estimateTime(function () { return BinarySerializer_1.BinarySerializer.Serialize(variant); }, 10), sd_var_t = _b[0], sd_var = _b[1];
        //console.log(sd_non_t,sd_var_t);
        //console.log(sd_non,sd_var);
    });
    it("str-variant", function () {
        var strary = new ClassStrAry();
        var ary = [];
        for (var t = 0; t < 1000; t++) {
            ary.push("randomrandomrandomrandomrandomrandom");
        }
        strary.str = ary;
        console.log("strarylen: " + BinarySerializer_1.BinarySerializer.Serialize(strary, ClassStrAry).byteLength);
    });
});
var ClassStrAry = /** @class */ (function () {
    function ClassStrAry() {
    }
    __decorate([
        SerializeField_1.SerializeField(DataType_1.DataType.String, true)
    ], ClassStrAry.prototype, "str", void 0);
    return ClassStrAry;
}());
var ClassVariantBenchmarkVariant = /** @class */ (function () {
    function ClassVariantBenchmarkVariant() {
    }
    __decorate([
        SerializeField_1.SerializeField(DataType_1.DataType.Varint32, true)
    ], ClassVariantBenchmarkVariant.prototype, "vint", void 0);
    return ClassVariantBenchmarkVariant;
}());
var ClassVariantBenchmarkInt = /** @class */ (function () {
    function ClassVariantBenchmarkInt() {
    }
    __decorate([
        SerializeField_1.SerializeField(DataType_1.DataType.Int32, true)
    ], ClassVariantBenchmarkInt.prototype, "vint", void 0);
    return ClassVariantBenchmarkInt;
}());
var ClassVariant = /** @class */ (function () {
    function ClassVariant() {
    }
    __decorate([
        SerializeField_1.SerializeField(DataType_1.DataType.Varint32)
    ], ClassVariant.prototype, "vint", void 0);
    __decorate([
        SerializeField_1.SerializeField(DataType_1.DataType.UVarint32)
    ], ClassVariant.prototype, "uvint", void 0);
    __decorate([
        SerializeField_1.SerializeField(DataType_1.DataType.Varint32, true)
    ], ClassVariant.prototype, "vintary", void 0);
    __decorate([
        SerializeField_1.SerializeField(DataType_1.DataType.UVarint32, true)
    ], ClassVariant.prototype, "uvintary", void 0);
    return ClassVariant;
}());
