import { BinaryBuffer } from "./BinaryBuffer";
export declare class BinaryBufDbgInfo {
    msgs: BinaryBufDbgMsg[];
    private m_lastmsg;
    private m_ids;
    constructor();
    emitDebugInfo(key: string, iswrite: boolean, extra?: string): void;
    verifyException(derDbgInfo: BinaryBufDbgInfo): void;
    static fmtMsgs(msgs: BinaryBufDbgMsg[]): string;
}
export declare class BinaryBufDbgMsg {
    key: string;
    iswrite: boolean;
    count: number;
    id: number;
    extra?: string;
    constructor(id: number, key: string, iswrite: boolean, count: number, extra?: string);
}
export declare class BinaryBufferDebug {
    private m_dbginfo;
    readonly dbginfo: BinaryBufDbgInfo;
    private static GenPropertyExtra;
    /**
     * Inject debug info for fast finding the inconsistance between Serialize/Deserialize.
     * Aiming for zero performance decline with debug mode disabled.
     * @param buffer
     */
    static Gen(buffer: BinaryBuffer): BinaryBuffer & BinaryBufferDebug;
}
